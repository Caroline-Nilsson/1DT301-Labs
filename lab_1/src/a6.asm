;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;   1DT301, Computer Technology I
;   Date: 2017-09-04
;   Author:
;                       Caroline Nilsson            (cn222nd)
;                       Daniel Alm GrundstrÃ¶m       (dg222dw)
;
;   Lab number:         1
;   Title:              How to use the PORTs. Digital input /output.
;                       Subroutine call.
;
;   Hardware:           STK600, CPU ATmega2560
;
;   Function:           Lights LEDs as a Johnson counter in an infinite loop. 
;
;                       I.e:
;                       0000 0001 -> 0000 0011 -> 0000 0111 -> ...
;                       1111 1111 -> 0111 1111 -> 0011 1111 -> ...
;
;   Input ports:        N/A
;
;   Output ports:       PORTB
;
;   Subroutines:        delay_500ms - delay execution for 500 ms
;
;   Included files:     m2560def.inc
;
;   Other information:  N/A
;
;   Changes in program: 
;                       2017-09-02:
;                       Implements flowchart design
;
;                       2017-09-04:
;                       Adds header and comments
;
;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.include "m2560def.inc"
.def dataDir = r16
.def currentValue = r17                 ; Current value of Johnson counter
.def complement = r18

; Initialize SP, Stack Pointer
ldi r20, HIGH(RAMEND)                   ; R20 = high part of RAMEND address
out SPH,R20                             ; SPH = high part of RAMEND address
ldi R20, low(RAMEND)                    ; R20 = low part of RAMEND address
out SPL,R20                             ; SPL = low part of RAMEND address

ldi currentValue, 0x00
rcall led_out
; Set PORTB as output
ldi dataDir, 0xFF
out DDRB, dataDir

count_up:
    sbis PORTB, PINB7                  ; If LED7 is lit (i.e. all LEDs lit)
        rjmp count_down                 ;   then start counting down

    ; Get next johnson value by multiplying by 2 and adding 1
    lsl currentValue
    inc currentValue

	rcall led_out
    rcall delay_500ms                   ; Delay to make changes visible
    rjmp count_up                       ; Continue counting up

count_down:
    sbic PORTB, PINB0                  ; If LED0 is unlit (i.e. all LEDs unlit)
        rjmp count_up                   ;   then start counting up

    lsr currentValue                    ; Shift to right to get previous
                                        ; johnson value

    rcall led_out
    rcall delay_500ms                   ; Delay to make changes visible
    rjmp count_down                     ; Continue counting down

; Generated by delay loop calculator
; at http://www.bretmulvey.com/avrdelay.html
;
; Delay 4 000 000 cycles
; 500ms at 8.0 MHz
delay_500ms:
    push r29
	push r30
	push r31
	
    ldi  r31, 4
    ldi  r30, 12
    ldi  r29, 52
L1: dec  r29
    brne L1
    dec  r30
    brne L1
    dec  r31
    brne L1
    rjmp PC+1
	
	pop r31
	pop r30
	pop r29
    ret

led_out:
	mov complement, currentValue
	com complement
	out PORTB, complement
	ret